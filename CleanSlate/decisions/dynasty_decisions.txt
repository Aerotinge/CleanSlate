# Targeted decisions are possible vs _all_ other characters and shown are in the Diplomacy View, not the Intrigue View. The taker is in the FROM scope.
#
# filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] ('self' MUST be set for decisions targetting only the taker, the other filter types can be set to lessen CPU load)
# ai_target_filter = [self/court/home_court/vassals/sub_realm/realm/dynasty/all] (which characters for which the AI evaluates the decision.)
#	court: all characters in the AI's host court, including prisoners, and characters currently away (wards, prisoners, etc)
#	home_court: all characters in the AI's home court, including prisoners, and characters currently away (wards, prisoners, etc)
#	vassals: direct vassal rulers of the AI's employer
#	sub_realm: all characters below the AI's employer
#	realm: all characters in the same top realm as the AI
#	dynasty: all members of the same dynasty
#	rivals: your rivals plus any character you have an opinion modifier with 'crime = yes' set (the same set of characters the 'is_foe' trigger evaluates)
#	all: all living characters (Avoid if possible. VERY CPU-HEAVY!)
#

targeted_decisions = {

	commit_suicide = {
		filter = self
		ai_target_filter = self
		ai = no

		potential = {
			trigger_if = {
				limit = {
					has_dlc = "Reapers"
				}
				OR = {
					is_incapable = yes
					trait = depressed
				}
			}
			trigger_else = {
				trait = depressed
			}
			is_adult = yes
			immortal = no
			prisoner = no
			NOT = { has_character_flag = attempting_suicide }
		}

		allow = {
			custom_tooltip = {
				text = commit_suicide_allow_tooltip
			}
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = {
					OR = {
						in_seclusion = yes
						NOR = {
							has_character_flag = do_not_disturb
							is_inaccessible_trigger = yes
						}
					}
				}
			}
		}

		effect = {
			if = {
				limit = { has_dlc = "Reapers" }
				set_character_flag = attempting_suicide
				if = {
					limit = { is_incapable = yes }
					character_event = { id = RIP.30210 }
				}
				else = {
					character_event = { id = RIP.30200 }
				}
			}
			else = {
				prestige = -200
				add_character_modifier = {
					modifier = suicide
					duration = -1
				}
				death = { death_reason = death_suicide }
			}
		}

		ai_will_do = {
			factor = 0
		}

	}

	legitimize_bastard = {
		ai = no
		only_playable = yes

		filter = close_relatives
		ai_target_filter = close_relatives
		ai_check_interval = 30

		from_potential = {
			has_children = yes
			# has_polygamy = no
			any_child = {
				trait = bastard
			}
		}

		potential = {
			trait = bastard
			is_child_of = FROM
			# is_liege_or_above = FROM
			# CleanSlate: Replaced the above with the below for human readability due to this condition being poorly worded and poorly documented
			any_liege = {
				character = FROM
			}
		}

		allow = {
			trigger_if = {
				limit = {
					NOT = {
						any_owned_bloodline = { has_bloodline_flag = bloodline_legitimize }
					}
				}
				FROM = {
					piety = 20
				}
			}
		}

		effect = {
			dynasty = FROM
			remove_trait = bastard
			add_trait = legit_bastard
			recalc_succession = yes
			if = {
				limit = {
					FROM = {
						NOT = { any_owned_bloodline = { has_bloodline_flag = bloodline_legitimize } }
					}
				}
				FROM = {
					piety = -20
				}
			}
			# Release Bastard if imprisoned
			if = {
				limit = {
					prisoner = yes
					host = { character = FROM }
				}
				imprison = no
			}
			# Bastard's other parent is pleased
			if = {
				limit = { FROM = { is_female = no } }
				mother = {
					show_scope_change = no
					opinion = {
						who = FROM
						modifier = legitimized_child
						years = 10
					}
				}
			}
			else = {
				father = {
					show_scope_change = no
					opinion = {
						who = FROM
						modifier = legitimized_child
						years = 10
					}
				}
			}

			# Spouses are angry
			FROM = {
				show_scope_change = no
				any_spouse = {
					limit = {
						NOT = { any_child = { character = ROOT } }
					}
					opinion = {
						who = ROOT_FROM
						modifier = legitimized_bastard
						years = 20
					}
				}
				if = {
					limit = {
						any_child = {
							dynasty = ROOT_FROM
							NOR = {
								character = ROOT
								trait = legit_bastard
							}
						}
					}
					custom_tooltip = {
						text = any_child_gets_angry_tt
						any_child = {
							show_scope_change = no
							limit = {
								dynasty = ROOT_FROM
								NOR = {
									character = ROOT
									trait = legit_bastard
								}
							}
							opinion = {
								who = ROOT_FROM
								modifier = legitimized_bastard
								months = 12
							}
						}
					}
				}
			}
		}

		ai_will_do = {
			factor = 0
		}

	}

	# Muslim ruler tries to convince a dynasty member to lose the 'Decadent' Trait
	convince_to_straighten_up = {
		only_playable = yes

		filter = dynasty
		ai_target_filter = dynasty
		ai_check_interval = 6

		hide_in_decisions_list = yes # This decision is shown in the Religion View for each decadent character

		from_potential = {
			religion_group = muslim
			NOT = { trait = decadent }
			prisoner = no
			father_even_if_dead = {
				OR = {
					is_alive = no
					is_playable = no
				}
			}
		}

		potential = {
			is_female = no
			prisoner = no
			trait = decadent
			has_regent = no
			lower_tier_than = FROM
			NOT = { has_character_flag = negotiated_to_drop_decadence }
		}

		allow = {
			FROM = {
				piety = 100
			}
			custom_tooltip = {
				text = "NOT_ALREADY_NEGOTIATED"
				NOT = { has_character_flag = negotiated_to_drop_decadence }
			}
		}
		effect = {
			set_character_flag = negotiated_to_drop_decadence
			character_event = { id = 91350 }
			FROM = { piety = -100 }
		}

		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0
				any_dynasty_member = {
					ai = no
					higher_tier_than = ROOT
					same_realm = ROOT
				}
			}
		}
	}

	# Unhardcoded decision.
	order_to_take_vows = {
		only_playable = yes

		filter = court
		ai_target_filter = court
		ai_check_interval = 120 # Check every 120 months

		from_potential = {
			has_dlc = "Sons of Abraham"
			is_adult = yes
			prisoner = no
			has_regent = no

			trigger_if = {
				limit = { is_alternate_start = yes }
				has_religion_feature = religion_monastic
				has_religion_feature = religion_feature_west_african
			}
			trigger_else = {
				religion_group = christian
				religion_group = indian_group
				religion = manichean
				has_religion_feature = religion_monastic
				has_religion_feature = religion_feature_west_african
			}
		}

		potential = {
			host = { character = FROM }
			religion = FROM
			is_adult = yes
			is_ruler = no
			NOR = {
				is_incapable = yes
				trait = monk
				trait = nun
				trait = muni
				trait = aryika
				trait = bhikkhu
				trait = bhikkhuni
				trait = sanyasi
				trait = sanyasini
			}
		}

		allow = {
			FROM = { piety = 50 }
			OR = {
				prisoner = yes
				AND = {
					# Is not heir to a title
					custom_tooltip = {
						text = NOT_HEIR_TITLE_TT
						NOT = { any_heir_title = { count >= 1 } }
					}
					is_married = no
				}
				trigger_if = {
					limit = { dynasty = FROM }
					# Matilde's Bloodline
					custom_tooltip = {
						text = BLOODLINE_EASIER_VOWS_TOOLTIP
						FROM = {
							dynasty = ROOT
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_easy_monks
								bloodline_is_active_for = PREV
							}
						}
						ROOT = {
							any_owned_bloodline = {
								has_bloodline_flag = bloodline_easy_monks
								bloodline_is_active_for = PREV
							}
						}
					}
				}
			}
		}

		effect = {
			FROM = { piety = -50 }
			add_ascetic_trait_effect = yes #Adds religion-based monk-traits.
			if = { #For pagans and Altstart
				limit = {
					OR = {
						has_religion_feature = religion_monastic
						has_religion_feature = religion_feature_west_african
					}
				}
				if = {
					limit = { is_female = yes }
					add_trait = nun
				}
				else = {
					add_trait = monk
				}
			}
			if = {
				limit = { prisoner = yes }
				prisoner = no
			}
			if = {
				limit = { is_married = yes }
				any_spouse = { remove_spouse = ROOT }
			}
			# Monks and Mystics actually join societies
			if = {
				limit = {
					has_dlc = "Mystics"
					is_in_society = no
					is_heretic = no
				}
				if = {
					limit = {
						OR = {
							religion = waldensian
							religion = lollard
							religion = cathar
						}
					}
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = {
						random_list = {
							50 = {
								trigger = { religion = catholic }
								join_society = monastic_order_benedictine
							}
							50 = { join_society = monastic_order_dominican }
						}
					}
				}
				else_if = {
					limit = {
						OR = {
							religion = orthodox
							religion = bogomilist
							religion = monothelite
							religion = iconoclast
							religion = paulician
						}
					}
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = { join_society = monastic_order_orthodox }
				}
				else_if = {
					limit = {
						OR = {
							religion = nestorian
							religion = messalian
						}
					}
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = { join_society = monastic_order_nestorian }
				}
				else_if = {
					limit = {
						OR = {
							religion = miaphysite
							religion = monophysite
						}
					}
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = { join_society = monastic_order_monophysite }
				}
				else_if = {
					limit = { religion = hindu }
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = { join_society = monastic_order_hindu }
				}
				else_if = {
					limit = { religion = buddhist }
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = { join_society = monastic_order_buddhist }
				}
				else_if = {
					limit = { religion = jain }
					custom_tooltip = { text = tooltip_vows_monk_joins_society }
					hidden_tooltip = { join_society = monastic_order_jain }
				}
			}
			if = {
				limit = {
					any_realm_lord = { is_theocracy = yes religion = ROOT }
				}
				custom_tooltip = { text = tooltip_vows_monk_goes_to_theocracy }
				hidden_tooltip = {
					random_realm_lord = {
						limit = {
							is_theocracy = yes
							religion = ROOT
						}
						preferred_limit = {
							reverse_opinion = { who = FROM value = 20 }
							vassal_of = FROM
							# The one they just joined.
							same_society_as = ROOT
						}
						preferred_limit = {
							vassal_of = FROM
							# The one they just joined.
							same_society_as = ROOT
						}
						preferred_limit = {
							# The one they just joined.
							same_society_as = ROOT
						}
						preferred_limit = {
							vassal_of = FROM
						}
						ROOT = { move_character = PREV }
					}
				}
			}
			if = {
				limit = {
					dynasty = FROM
					NOT = { trait = zealous }
				}
				opinion = { modifier = opinion_cloistered_me_family who = FROM years = 20 }
			}
			else_if = {
				limit = {
					NOR = {
						dynasty = FROM
						trait = zealous
					}
					opinion = { modifier = opinion_cloistered_me who = FROM years = 20 }
				}
			}
			if = {
				limit = { is_child_of = FROM }
				hidden_tooltip = { FROM = { character_event = { id = HFP.23001 } } }
			}
		}

		ai_will_do = {
			factor = 1

			modifier = { #Hate you too much to just send you off.
				factor = 0
				prisoner = yes
				FROM = { is_benevolent_trigger = no }
				NOT = { is_child_of = FROM }
				reverse_opinion = {
					who = FROM
					value < -20
				}
			}

			modifier = { #Like you too much to do it.
				factor = 0
				reverse_opinion = {
					who = FROM
					value >= 50
				}
			}

			modifier = { #I'm a good ruler and he is a dynastic heir.
				factor = 0
				is_child_of = FROM
				dynasty = FROM
				FROM = { is_benevolent_trigger = yes }
				reverse_opinion = {
					who = FROM
					value = 0
				}
			}

			modifier = { #Must protect the line.
				factor = 5
				NOT = { dynasty = FROM }
				is_child_of = FROM
			}

			modifier = { #Hate you.
				factor = 5
				is_child_of = FROM
				is_rival = FROM
			}

			modifier = { #There are better spares.
				factor = 20
				is_child_of = FROM
				OR = {
					has_negative_congenital_trigger = yes
					has_infertile_trait_trigger = yes
					has_severe_disability_trigger = yes
				}
				FROM = {
					any_child = {
						is_alive = yes
						NOR = {
							character = ROOT
							has_negative_congenital_trigger = yes
							has_infertile_trait_trigger = yes
							has_severe_disability_trigger = yes
						}
					}
				}
			}

			modifier = { #Must preserve the realm from falling to evil.
				factor = 5
				is_evil_trigger = yes
				FROM = {
					is_benevolent_trigger = yes
					any_child = {
						is_alive = yes
						NOR = {
							character = ROOT
							is_evil_trigger = yes
						}
					}
				}
			}

		}

	}

	send_child_into_hiding = {
		only_rulers = yes
		is_high_prio = yes

		filter = dynasty
		ai_target_filter = dynasty
		ai_check_interval = 12

		from_potential = {
			has_regent = no
			has_children = yes
			OR = {
				ai = no
				OR = {
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}

		potential = {
			liege = { character = FROM }
			is_child_of = FROM
			is_ruler = no
			prisoner = no
			FROM = {
				any_known_plotter = {
					target = ROOT
					OR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
						ROOT = { has_character_modifier = suspected_murder_plot }
					}
				}
			}
			trigger_if = {
				limit = { FROM = { ai = yes } }
				trigger_if = {
					limit = { is_female = yes }
					FROM = {
						OR = {
							has_law = true_cognatic_succession
							has_law = enatic_cognatic_succession
							has_law = enatic_succession
						}
					}
				}
				trigger_else = {
					FROM = {
						OR = {
							has_law = agnatic_succession
							has_law = cognatic_succession # agnatic-cognatic
							has_law = true_cognatic_succession
						}
					}
				}
			}
			NOR = {
				any_spouse = { character = FROM }
				has_character_flag = do_not_disturb
				has_character_modifier = went_out_of_hiding_timer
				is_inaccessible_trigger = yes
				is_plot_target_of = FROM
			}
		}

		allow = {
			has_job_title = no
			in_command = no
			custom_tooltip = {
				text = recently_went_out_of_hiding_tooltip
				hidden_tooltip = {
					NOT = { has_character_modifier = went_out_of_hiding_timer }
				}
			}
		}

		effect = {
			custom_tooltip = { text = go_into_hiding_info_tooltip }
			add_trait = in_hiding
			set_character_flag = do_not_disturb
			hidden_tooltip = {
				any_plotter = {
					target = ROOT
					limit = {
						NOT = { character = FROM }
						OR = {
							has_plot = plot_kill_character
							has_plot = plot_kill_spouse
						}
					}
					if = {
						# CleanSlate: Prevent the AI from firing unneeded notification events
						limit = { ai = yes }
						if = {
							# CleanSlate: Clear the flag directly instead of firing the event that clears it
							limit = { has_character_flag = murder_in_motion }
							clr_character_flag = murder_in_motion
						}
					}
					else = {
						# CleanSlate: Players can have notification events
						if = {
							limit = { has_character_flag = murder_in_motion }
							character_event = { id = CM.6180 }
						}
						else = {
							character_event = { id = CM.6004 }
						}
					}
					any_backed_character = {
						limit = { ai = no }
						character_event = { id = CM.6004 }
					}
				}
				any_player = {
					limit = {
						OR = {
							any_spouse = { character = FROM }
							is_child_of = ROOT
							is_lover = ROOT
							is_parent_of = ROOT
							is_rival = ROOT
						}
						NOR = {
							character = FROM
							plot_target_char = { character = ROOT }
							any_backed_character = { plot_target_char = { character = ROOT } }
						}
					}
					character_event = { id = CM.6004 }
				}
			}
		}

		ai_will_do = {
			factor = 0.5

			modifier = {
				factor = 0.5
				FROM = {
					NOT = { trait = in_hiding }
				}
			}

			modifier = {
				factor = 0.5
				reverse_opinion = {
					who = FROM
					value < -24
				}
			}

			modifier = {
				factor = 1.5
				reverse_opinion = {
					who = FROM
					value >= 25
				}
			}

			modifier = {
				factor = 5
				FROM = { trait = in_hiding }
			}

			modifier = {
				factor = 10
				FROM = { trait = paranoid }
			}
		}
	}

	take_child_out_of_hiding = {
		only_rulers = yes
		is_high_prio = yes

		filter = dynasty
		ai_target_filter = dynasty
		ai_check_interval = 12

		from_potential = {
			has_regent = no
			has_children = yes
		}

		potential = {
			trait = in_hiding
			is_ruler = no
			liege = { character = FROM }
			is_child_of = FROM
			prisoner = no
			NOT = { any_spouse = { character = FROM } }
		}

		allow = {
			always = yes
		}

		effect = {
			custom_tooltip = { text = come_out_of_hiding_info_tooltip }
			clr_character_flag = do_not_disturb
			remove_trait = in_hiding
			add_character_modifier = {
				name = went_out_of_hiding_timer
				duration = 180
				hidden = yes
			}
			hidden_tooltip = {
				any_plotter = {
					target = ROOT
					limit = {
						ai = no
						NOT = { character = FROM }
						OR = {
							has_plot = plot_kill_character
							has_plot = plot_kill_spouse
						}
					}
				}
				any_player = {
					limit = {
						NOT = { character = FROM }
						OR = {
							is_parent_of = ROOT
							sibling = ROOT
						}
					}
					character_event = { id = CM.6005 }
				}
			}
		}

		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.3
				FROM = { trait = paranoid }
			}

			modifier = {
				factor = 0
				FROM = {
					any_known_plotter = {
						target = ROOT
						OR = {
							has_plot = plot_kill_character
							has_plot = plot_kill_spouse
							ROOT = { has_character_modifier = suspected_murder_plot }
						}
					}
				}
			}
		}
	}

	go_into_hiding = {
		only_playable = yes
		is_high_prio = yes

		filter = self
		ai_target_filter = self
		ai_check_interval = 12

		potential = {
			prisoner = no
			is_inaccessible_trigger = no
			OR = {
				ai = no
				trait = amateurish_plotter
				trait = flamboyant_schemer
				trait = intricate_webweaver
				trait = elusive_shadow
			}
		}
		allow = {
			in_command = no
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = { NOT = { has_character_flag = do_not_disturb } }
			}
			has_job_title = no
			custom_tooltip = {
				text = is_target_of_murder_plot_tooltip
				hidden_tooltip = {
					OR = {
						has_character_modifier = suspected_murder_plot
						any_known_plotter = {
							target = ROOT
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
					}
				}
			}
			custom_tooltip = {
				text = recently_went_out_of_hiding_tooltip
				hidden_tooltip = {
					NOT = { has_character_modifier = went_out_of_hiding_timer }
				}
			}
		}
		effect = {
			set_character_flag = do_not_disturb
			custom_tooltip = { text = go_into_hiding_info_tooltip }
			add_trait = in_hiding
			hidden_tooltip = {                    # Notify player and close family and plotters
				ROOT = {
					any_plotter = {
						target = ROOT
						limit = {
							NOT = { has_character_flag = murder_in_motion }
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
						character_event = { id = CM.6000 }
						any_backed_character = {
							character_event = { id = CM.6000 }
						}
					}
					any_plotter = {
						target = ROOT
						limit = {
							has_character_flag = murder_in_motion
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
						character_event = { id = CM.6180 }
						any_backed_character = {
							character_event = { id = CM.6000 }
						}
					}
				}
				any_spouse = {
					limit = {
						NOT = { plot_target_char = { character = ROOT } }
						NOT = { any_backed_character = { plot_target_char = { character = ROOT } } }
						NOT = { is_rival = ROOT }
					}
					character_event = { id = CM.6000 }
				}
			}
		}
		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0
				ROOT = {
					any_plotter = {
						target = ROOT
						is_primary_heir = yes
						ai = no
					}
				}
			}
			modifier = {
				factor = 0.5
			}
			modifier = {
				factor = 0.1
				age = 65
			}
			modifier = {
				factor = 0.1
				trait = brave
			}
			modifier = {
				factor = 2
				trait = depressed
			}
			modifier = {
				factor = 5
				trait = craven
			}
			modifier = {
				factor = 10
				trait = paranoid
			}
		}
	}

	come_out_of_hiding = {
		only_rulers = yes
		is_high_prio = yes

		filter = self
		ai_target_filter = self
		ai_check_interval = 12

		potential = {
			is_ruler = yes
			trait = in_hiding
			NOT = { has_character_flag = in_religious_seclusion }
		}
		allow = {
			OR = {
				OR = {
					age = 16
					NOT = {	is_incapable = yes }
				}
				regent = {
					NOT = { trait = deceitful }
					NOT = { trait = ambitious }
					NOT = { is_rival = ROOT }
				}
			}
		}
		effect = {
			add_character_modifier = {
				name = went_out_of_hiding_timer
				duration = 180
				hidden = yes
			}
			clr_character_flag = do_not_disturb
			custom_tooltip = { text = come_out_of_hiding_info_tooltip }
			remove_trait = in_hiding
			hidden_tooltip = {                    # Notify player and close family and plotters
				ROOT = {
					any_plotter = {
						target = ROOT
						limit = {
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
						character_event = { id = CM.6001 }
					}
				}
				any_spouse = {
					limit = {
						ROOT = {
							NOT = { is_plot_target_of = THIS }
						}
					}
					character_event = { id = CM.6001 }
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.3
				trait = paranoid
			}
			modifier = {
				factor = 0
				NOT = {
					ROOT = {
						any_plotter = {
							target = ROOT
							is_primary_heir = yes
							ai = no
						}
					}
				}
				OR = {
					has_character_modifier = suspected_murder_plot
					any_known_plotter = {
						target = ROOT
						OR = {
							has_plot = plot_kill_character
							has_plot = plot_kill_spouse
						}
					}
				}
			}
		}
	}

	send_spouse_into_hiding = {
		only_rulers = yes
		is_high_prio = yes

		filter = spouse
		ai_target_filter = spouse
		ai_check_interval = 12

		from_potential = {
			is_ruler = yes
			has_regent = no
			OR = {
				ai = no
				OR = {
					trait = amateurish_plotter
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}

		potential = {
			NOT = { is_inaccessible_trigger = yes }
			is_ruler = no
			is_married = FROM
			liege = { character = FROM }
			NAND = {
				is_plot_target_of = FROM
				FROM = {
					OR = {
						has_plot = plot_kill_character
						has_plot = plot_kill_spouse
					}
				}
			}
			NOT = { has_character_modifier = went_out_of_hiding_timer }
		}

		allow = {
			in_command = no
			prisoner = no
			custom_tooltip = {
				text = is_not_busy_trigger_tooltip
				hidden_tooltip = { NOT = { has_character_flag = do_not_disturb } }
			}
			has_job_title = no
			NOT = { is_ruler = yes }
			custom_tooltip = {
				text = is_target_of_murder_plot_tooltip
				hidden_tooltip = {
					OR = {
						has_character_modifier = suspected_murder_plot
						FROM = {
							any_known_plotter = {
								target = PREV
								OR = {
									has_plot = plot_kill_character
									has_plot = plot_kill_spouse
								}
							}
						}
					}
				}
			}
			custom_tooltip = {
				text = recently_went_out_of_hiding_tooltip
				hidden_tooltip = {
					NOT = { has_character_modifier = went_out_of_hiding_timer }
				}
			}
		}

		effect = {
			set_character_flag = do_not_disturb
			custom_tooltip = { text = go_into_hiding_info_tooltip }
			add_trait = in_hiding
			hidden_tooltip = {                    # Notify player and close family and plotters
				ROOT = {
					any_plotter = {
						target = ROOT
						limit = {
							NOT = { has_character_flag = murder_in_motion }
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
						character_event = { id = CM.6002 }
						any_backed_character = {
							character_event = { id = CM.6002 }
						}
					}
					any_plotter = {
						target = ROOT
						limit = {
							has_character_flag = murder_in_motion
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
						character_event = { id = CM.6180 }
						any_backed_character = {
							character_event = { id = CM.6002 }
						}
					}
				}
			}
		}
		ai_will_do = {
			factor = 1

			modifier = {
				factor = 0.5
			}
			modifier = {
				factor = 0.1
				spouse = {
					age = 65
				}
			}
			modifier = {
				factor = 0.1
				spouse = {
					trait = pregnant
					NOT = {
						father_of_unborn = {
							character = ROOT
						}
					}
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					FROM = {
						trait = in_hiding
					}
				}
			}
			modifier = {
				factor = 0.5
				NOT = {
					opinion = {
						who = spouse
						value = -24
					}
				}
			}
			modifier = {
				factor = 1.5
				opinion = {
					who = spouse
					value = 25
				}
			}
			modifier = {
				factor = 5
				trait = in_hiding
			}
			modifier = {
				factor = 10
				trait = paranoid
			}
			modifier = {
				factor = 10
				spouse = {
					trait = pregnant
					father_of_unborn = {
						character = ROOT
					}
				}
			}
		}
	}

	take_spouse_out_of_hiding = {
		only_rulers = yes
		is_high_prio = yes

		filter = spouse
		ai_target_filter = spouse
		ai_check_interval = 12

		from_potential = {
			is_ruler = yes
			has_regent = no
		}

		potential = {
			trait = in_hiding
			is_ruler = no
			is_married = FROM
			liege = { character = FROM }
			prisoner = no
		}

		allow = {
			trait = in_hiding
		}

		effect = {
			add_character_modifier = {
				name = went_out_of_hiding_timer
				duration = 180
				hidden = yes
			}
			clr_character_flag = do_not_disturb
			custom_tooltip = { text = come_out_of_hiding_info_tooltip }
			remove_trait = in_hiding
			hidden_tooltip = {                    # Notify player and close family and plotters
				ROOT = {
					any_plotter = {
						target = ROOT
						limit = {
							spouse = { NOT = { character = PREV } }
							OR = {
								has_plot = plot_kill_character
								has_plot = plot_kill_spouse
							}
						}
						character_event = { id = CM.6003 }
					}
				}
			}
		}
		ai_will_do = {
			factor = 1
			modifier = {
				factor = 0.3
				trait = paranoid
			}
			modifier = {
				factor = 0
				spouse = {
					OR = {
						has_character_modifier = suspected_murder_plot
						FROM = {
							any_known_plotter = {
								target = PREV
								OR = {
									has_plot = plot_kill_character
									has_plot = plot_kill_spouse
								}
							}
						}
					}
				}
			}
		}
	}

}
